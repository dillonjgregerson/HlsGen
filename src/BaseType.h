//////////////////////////////////////////////////////////////////////////////
// filename - BaseType.h
// author - Dillon Gregerson
// project - Ece574 Assignment 2
//////////////////////////////////////////////////////////////////////////////

#pragma once

#include <iostream>
#include <string>

//TODO: printing methods should be more appropriately named, class members made protected

class BaseType
{
public:

    //@brief DataType will hold the type of data 
	enum class DataType
	{
		NONE,
		INPUT,
		OUTPUT,
		WIRE,
		REGISTER
	};
    
	//////////////////////////////////////////////////////////////////////////////
	//@brief default constructor
	//@param void
	//@return N/A
	//////////////////////////////////////////////////////////////////////////////
	BaseType(void);

	//////////////////////////////////////////////////////////////////////////////
	//@brief constructor
	//@param bool sign - sign of the data type (unsigned or signed)
	//@param unsigned int dataWidth - width in bits of data type
	//@param BaseType::DataType dtype - type of data (enum)
	//@return N/A
	//////////////////////////////////////////////////////////////////////////////
	explicit BaseType(bool sign, unsigned int dataWidth, BaseType::DataType dType);

	//////////////////////////////////////////////////////////////////////////////
	//@brief default destructor
	//@param void
	//@return N/A
	//////////////////////////////////////////////////////////////////////////////
	virtual ~BaseType(void);

	//////////////////////////////////////////////////////////////////////////////
	//@brief return string type of data
	//@param void
	//@return std::string the type of data
	//////////////////////////////////////////////////////////////////////////////
	std::string printDataType(void);

	//////////////////////////////////////////////////////////////////////////////
	//@brief return string width of data
	//@param void
	//@return std::string the width of data
	//////////////////////////////////////////////////////////////////////////////
	std::string printDataWidth(void);

	//////////////////////////////////////////////////////////////////////////////
	//@brief print details about the data type
	//@param void
	//@return void
	//////////////////////////////////////////////////////////////////////////////
	void print(void);

	bool signed_;
	unsigned int dataWidth_;
	DataType dataType_;
};

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////